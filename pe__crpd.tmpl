system {
    root-authentication {
        encrypted-password "$6$lB5c6$Zeud8c6IhCTE6hnZxXBl3ZMZTC2hOx9pxxYUWTHKW1oC32SATWLMH2EXarxWS5k685qMggUfFur1lq.o4p4cg1"; ## SECRET-DATA
    }
}
interfaces {
    lo0 {
        unit 0 {
            family iso {
                address {{ .iso_addr }};
            }
        }
    }
}
routing-options {
    autonomous-system {{ $.core_asn }};
}

policy-options {
{{- range $name, $link := .clab_links }}
    {{- if eq (index $.clab_nodes $link.clab_far.clab_node).type "ce" }}
    policy-statement PL-eBGP-{{ $.ent_asn }}-{{ $link.clab_far.clab_node }}-OUT {
        term BGP {
            then {
                metric {{ $link.bgp_metric }};
            }
        }
    }
    {{- end }}
{{- end }}
    policy-statement PL-iBGP-RR-OUT {
        term NHS {
            from family inet;
            then {
                next-hop self;
            }
        }
    }
}

protocols {
    bgp {
        group iBGP-RR {
            type internal;
            local-address {{ .lo }};
            family inet {
                unicast {
                    add-path {
                        receive;
                        send {
                            path-count 6;
                        }
                    }
                }
            }
            export PL-iBGP-RR-OUT;      
{{- range $name, $rr := $.route_reflectors }}
            neighbor {{ $rr }};
{{- end }}
        }
{{- if or (eq .clab_node "pe1") (eq .clab_node "pe2") }}
        group eBGP-{{ $.ent_asn }} {
            family inet {
                unicast;
            }
            peer-as {{ $.ent_asn }};
    {{- range $name, $link := .clab_links }}
        {{- if eq (index $.clab_nodes $link.clab_far.clab_node).type "ce" }}
            neighbor {{ ip $link.clab_far.clab_link_ip }} {
                export PL-eBGP-{{ $.ent_asn }}-{{ $link.clab_far.clab_node }}-OUT;
            }
        {{- end }}
    {{- end }}
        }
{{- end }}
{{- if or (eq .clab_node "pe3") (eq .clab_node "pe4") }}
        group eBGP-{{ $.cp_asn }} {
            family inet {
                unicast;
            }
            peer-as {{ $.cp_asn }};
    {{- range $name, $link := .clab_links }}
        {{- if eq (index $.clab_nodes $link.clab_far.clab_node).type "br-pe-l2" }}
            neighbor {{ ip $link.clab_far.br_ip }};
        {{- end }}
    {{- end }}
        }
{{- end }}
    }
    isis {
        level 1 disable;
        interface lo.0 {
            passive;
        }
{{- range $name, $link := .clab_links }}
    {{- if $link.isis_metric }}
        interface {{ $link.port }} {
            level 2 metric {{ $link.isis_metric }};
        }
    {{- else }}
        interface {{ $link.port }};
    {{- end }}
{{- end }}
    }
}